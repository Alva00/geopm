BACKLOG
=======


BUGS
----

geopmpolicy-whitelist-root
    - "geopmpolicy -w" requires root access, but output is only a
      function of cpuid (2015-10-12).

geopmpolicy-extra-obj
    - There are many objects compiled into libgeopmpolicy which are
      not needed (2015-10-30).

out-of-place-testing
    - Building out of place works correctly, but testing out of place
      does not, gtest links are broken and the license header check
      does not work (2015-10-30).

platform-domain-brittle
    - Platform assumes that the RAPL domain of control is the socket
      scope, and cannot handle a platform where this is not the case.

policy-hint-ignored
    - Policy hint is being entirely ignored.  Should be stored in the
      state of the region and inform the decider (2016-05-06).

no-app-runtime
    - The SampleRegulator attempts to interpolate runtime from the
      data returned by the application.  The application does not
      provide runtime information, and the runtime is only needed
      after the region has completed (2016-05-06).

default-prof-singleton
    - Need to use singleton pattern (as is done in the Environment
      class) to create the default profile.  Current implementation is
      not thread safe (2016-05-06).

runtime-decider-change
    - The Policy object enables the deciders to be chaged during
      runtime, but the Controller does not switch the deciders during
      runtime if the Policy changes.  The code should at least throw
      an error if the Policy's decider is changed during runtime.

fortran-mpi-linking
    - Linking to mpi from fortran is not portable.  Hardcoded to
      libmpifort.so.

ONGOING ENHANCEMENTS
--------------------

extend-unit-tests
    - Test coverage is too low.  Need to expand unit testing to
      increase coverage. (2015-12-14)

create-examples
    - Generate an example for all important use cases of geopm with
      the focus on using these examples as our integration test
      suite. (2015-12-14)

improve-documentation
    - Add detail to doxygen comments where @brief descriptions are all
      that is provided.  Unify documentation style. (2015-12-14)


HIGH PRIORITY ENHANCEMENTS
--------------------------

resource-manager-integration
    - Look into integration with SLURM, PBS-pro, Torque and COBALT
      (2016-05-06).

cpu-frequency-platform
    - To enable deciders that use CPU frequency for control need to
      implement a Platform plugin with right granularity of
      measurement and control (2015-2-1).

run-geopm-app-no-ctl
    - If an application uses the geopm profile interface the geopm
      runtime component is required.  Relax this condition so that
      marked-up applications can be used without the runtime.  If the
      controller isn't found, print a warning and turn off geopm
      features in the application (2016-05-10).

enable-telemetry-extension
    - Currently collecting a limited set of hardware telemetry.  Some
      decision algorithms will want to sample other signals, and we
      need to make signal inclusion more easily extensible
      (2016-05-06).

change-scheduler-scope
    - Change the use of the SampleScheduler to account for the overhead
      introduced by ProfileThread interface (tprof), not just the
      overhead from the Profile interface (2016-05-06).

profile-wo-runtime
    - Add feature to geopmpolicy so that it can create a report when
      run before and after an application completes.  This can be
      implemented by differencing performance counter values read at
      application completion and comparison with values stored to disk
      prior to application start up.

enable-geopm-profiling
    - Enable performance profiling of the geopm code itself.
      Determine the overhead the run-time requires and enable
      reporting at different levels of granularity. (2015-12-14)

investigate-powerapi-integration
    - Look into how geopm might integrate with Sandia's
      PowerAPI. (2015-12-14)

collect-bmc-data
    - Collect out of band data at a low sample rate and interpolate
      results. Find a way to get access to this data on the compute
      cores, especially when CPU doesn't have access to out of band
      network supporting BMC data. (2015-12-14)

expand-platform-support
    - Add support for KNL, Broadwell, and Skylake servers in the
      Platform and PlatformImp classes (2016-05-06).

enable-cpu-granularity
    - Investigate enabling the decider to set policies per-CPU and the
      platform to give the decider data at per-CPU resolution.  The
      platform would provide an abstraction that maps the hardware
      domains of control and observation granularity to appear to be
      per-CPU (2016-05-06).

enable-rm-signal-abnormal
    - In an emergency power situation where the resource manager has
      interfered with power limits by a mechanism other than geopm,
      enable the resource manager to signal this to the geopm runtime.
      This signal can be used to ignore measurements made while other
      power management systems are interfering. (2016-05-13)

enable-batch-msr-access
    - Use the batch read/write feature of the msr-safe driver to
      speed up our MSR accesses by making fewer calls into the
      driver. (2016-05-17)

add-high-level-catch
    - Add a catch in Controller.cpp that catches all throws, cleans
      up /dev/shm (and possibly other cleanup) , and then re-throws
      the error. (2016-05-17)


LOW PRIORITY ENHANCEMENTS
-------------------------

automated-ci
    - Do some automated continuous integration testing, currently only
      doing developer workstation testing. (2015-12-14)

generate-aggregated-report
    - Currently one report file per compute node, aggregate data based
      on depth parameter passed to the Profile::print()
      method. (2015-12-14)

gui-report-explorer
    - Write a post-processing application to enable exploration of
      generated report data. This is a nice to have feature, and may
      be especially useful for debug purposes, but is a low priority.
      (2015-12-14)

enable-automatic-profiling
    - Provide interface for algorithms attempting to do automatic
      detection of application regions and progress through analysis
      of hardware events. This is a stretch goal: although the data
      required will be collected, designing the interface to provide
      it to an outside agent may break designs for
      encapsulation. (2015-12-14)
