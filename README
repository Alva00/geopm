GEOPM - Global Energy Optimization Power Management
===================================================

DISCLAIMER
----------
SEE COPYING FILE FOR LICENSE INFORMATION.

LAST UPDATE
-----------
Christopher Cantalupo <christopher.m.cantalupo@intel.com>
2015 June 16


SUMMARY
-------
Global Energy Optimization Power Management is a hierarchical control system
for optimizing power policy in a power-constrained MPI job to increase
performance.  It is designed to coordinate power policy and performance across
all of the compute nodes hosting one MPI job on a portion of a distributed
computing system.  The root of the control hierarchy tree can communicate
through shared memory with the system resource management daemon to extend the
hierarchy above the individual MPI job level and enable management of system
power resources for multiple MPI jobs and multiple users by the system
resource manager.  The geopm package provides the libgeopm library the
libgeopmpolicy library and the geopmctl application.  The libgeopm library can
be called within MPI applications to enable application feedback for informing
the control decisions.  If modification of the target application is not
desired then the geopmctl application can be run concurrently with the target
application.  In this case, target application feedback is inferred by
querying the hardware through Model Specific Registers (MSRs).  With either
method (libgeopm or geopmctl), the control hierarchy tree writes processor
power policy through MSRs to enact policy decisions.  The libgeopmpolicy
library is used by a resource manager to set energy policy control parameters
for MPI jobs.


BUILD REQUIREMENTS
------------------
The geopm package requires a compiler that supports the MPI 2.2 and
C++11 standards.  These requirements can be met by using GCC version
4.7 or greater and installing the openmpi-devel package version 1.6 or
greater on RHEL or SLES Linux.

The proper configuration can be achieved by pointing the configure
script to a compiler that supports the requirements.  The example
below uses openmpi built on top of GCC as it is installed by SLES.
The "--prefix" option installs the geopm package to the "build"
sub-directory of the user's home:

    MPICC=/usr/lib64/mpi/gcc/openmpi/bin/mpicc
    MPICXX=/usr/lib64/mpi/gcc/openmpi/bin/mpicxx
    CC=$MPICC CXX=$MPICXX ./configure --prefix=$HOME/build
    make
    make install


RUN REQUIREMENTS
----------------
The msr-safe kernel driver must be loaded at runtime to support user
level read and write of white-listed MSRs.  The source code for the
driver can be found here:

https://github.com/scalability-llnl/msr-safe


TESTING
-------
From within the source code directory, tests can be executed with the
"make check" target.  Some tests must be run as MPI applications, and
in order support these tests you must define the MPIEXEC environment
variable to whatever is appropriate for your your MPI runtime (default
is mpiexec).  The tests assume that this application will respect the
'-n' flag to set the number of MPI processes.  Note that '-n' is defined
by the MPI standard.  Each MPI dependent test is run with 16 MPI
processes.


STATUS
------
This software is pre-alpha quality and largely incomplete.  This
source code is considered Intel Confidential material.  We will be
petitioning the Intel OS-PDT to license it under an open source BSD
style license soon, but currently it is licensed under a restrictive
Intel Confidential license.  See COPYING for details.
